<?xml version="1.0"?>
<doc>
    <assembly>
        <name>A-Offset 2.0 Alpha</name>
    </assembly>
    <members>
        <member name="T:WindowsFormsApplication1.CompressionFormat">
            <summary>
            Base class for all compression formats.
            </summary>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.Supports(System.String)">
            <summary>
            Checks if the decompressor for this format supports the given file. Assumes the
            file exists. Returns false when it is certain that the given file is not supported.
            False positives may occur, as this method should not do any decompression, and
            may mis-interpret a similar file format as compressed.
            </summary>
            <param name="file">The name of the file to check.</param>
            <returns>False if the file can certainly not be decompressed using this decompressor.
            True if the file may potentially be decompressed using this decompressor.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.Supports(System.IO.Stream,System.Int64)">
            <summary>
            Checks if the decompressor for this format supports the data from the given stream.
            Returns false when it is certain that the given data is not supported.
            False positives may occur, as this method should not do any decompression, and may
            mis-interpret a similar data format as compressed.
            </summary>
            <param name="stream">The stream that may or may not contain compressed data. The
            position of this stream may change during this call, but will be returned to its
            original position when the method returns.</param>
            <param name="inLength">The length of the input stream.</param>
            <returns>False if the data can certainly not be decompressed using this decompressor.
            True if the data may potentially be decompressed using this decompressor.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.Decompress(System.String,System.String)">
            <summary>
            Decompresses the given file, writing the deocmpressed data to the given output file.
            The output file will be overwritten if it already exists.
            Assumes <code>Supports(infile)</code> returns <code>true</code>.
            </summary>
            <param name="infile">The file to decompress.</param>
            <param name="outfile">The target location of the decompressed file.</param>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.Decompress(System.IO.Stream,System.Int64,System.IO.Stream)">
            <summary>
            Decompresses the given stream, writing the decompressed data to the given output stream.
            Assumes <code>Supports(instream)</code> returns <code>true</code>.
            After this call, the input stream will be positioned at the end of the compressed stream,
            or at the initial position + <code>inLength</code>, whichever comes first.
            </summary>
            <param name="instream">The stream to decompress. At the end of this method, the position
            of this stream is directly after the compressed data.</param>
            <param name="inLength">The length of the input data. Not necessarily all of the
            input data may be read (if there is padding, for example), however never more than
            this number of bytes is read from the input stream.</param>
            <param name="outstream">The stream to write the decompressed data to.</param>
            <returns>The length of the output data.</returns>
            <exception cref="!:NotEnoughDataException">When the given length of the input data
            is not enough to properly decompress the input.</exception>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.Compress(System.String,System.String)">
            <summary>
            Compresses the given input file, and writes the compressed data to the given
            output file.
            </summary>
            <param name="infile">The file to compress.</param>
            <param name="outfile">The file to write the compressed data to.</param>
            <returns>The size of the compressed file. If -1, the file could not be compressed.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.Compress(System.IO.Stream,System.Int64,System.IO.Stream)">
            <summary>
            Compresses the next <code>inLength</code> bytes from the input stream,
            and writes the compressed data to the given output stream.
            </summary>
            <param name="instream">The stream to read plaintext data from.</param>
            <param name="inLength">The length of the plaintext data.</param>
            <param name="outstream">The stream to write the compressed data to.</param>
            <returns>The size of the compressed stream. If -1, the file could not be compressed.</returns>
        </member>
        <member name="P:WindowsFormsApplication1.CompressionFormat.ShortFormatString">
            <summary>
            Gets a short string identifying this compression format.
            </summary>
        </member>
        <member name="P:WindowsFormsApplication1.CompressionFormat.Description">
            <summary>
            Gets a short description of this compression format (used in the program usage).
            </summary>
        </member>
        <member name="P:WindowsFormsApplication1.CompressionFormat.SupportsCompression">
            <summary>
            Gets if this format supports compressing a file.
            </summary>
        </member>
        <member name="P:WindowsFormsApplication1.CompressionFormat.SupportsDecompression">
            <summary>
            Gets if this format supports decompressing a file.
            </summary>
        </member>
        <member name="P:WindowsFormsApplication1.CompressionFormat.CompressionFlag">
            <summary>
            Gets the value that must be given on the command line in order to compress using this format.
            </summary>
        </member>
        <member name="M:WindowsFormsApplication1.CompressionFormat.ParseCompressionOptions(System.String[])">
            <summary>
            Parses any input specific for this format. Does nothing by default.
            </summary>
            <param name="args">Any arguments that may be used by the format.</param>
            <returns>The number of input arguments consumed by this format.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.LZUtil.GetOccurrenceLength(System.Byte*,System.Int32,System.Byte*,System.Int32,System.Int32@,System.Int32)">
            <summary>
            Determine the maximum size of a LZ-compressed block starting at newPtr, using the already compressed data
            starting at oldPtr. Takes O(inLength * oldLength) = O(n^2) time.
            </summary>
            <param name="newPtr">The start of the data that needs to be compressed.</param>
            <param name="newLength">The number of bytes that still need to be compressed.
            (or: the maximum number of bytes that _may_ be compressed into one block)</param>
            <param name="oldPtr">The start of the raw file.</param>
            <param name="oldLength">The number of bytes already compressed.</param>
            <param name="disp">The offset of the start of the longest block to refer to.</param>
            <param name="minDisp">The minimum allowed value for 'disp'.</param>
            <returns>The length of the longest sequence of bytes that can be copied from the already decompressed data.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.ToNDSu32(System.Byte[],System.Int32)">
            <summary>
            Returns a 4-byte unsigned integer as used on the NDS converted from four bytes
            at a specified position in a byte array.
            </summary>
            <param name="buffer">The source of the data.</param>
            <param name="offset">The location of the data in the source.</param>
            <returns>The indicated 4 bytes converted to uint</returns>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.ToNDSs32(System.Byte[],System.Int32)">
            <summary>
            Returns a 4-byte signed integer as used on the NDS converted from four bytes
            at a specified position in a byte array.
            </summary>
            <param name="buffer">The source of the data.</param>
            <param name="offset">The location of the data in the source.</param>
            <returns>The indicated 4 bytes converted to int</returns>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.FromNDSu32(System.UInt32)">
            <summary>
            Converts a u32 value into a sequence of bytes that would make ToNDSu32 return
            the given input value.
            </summary>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.ToNDSu24(System.Byte[],System.Int32)">
            <summary>
            Returns a 3-byte integer as used in the built-in compression
            formats in the DS, convrted from three bytes at a specified position in a byte array,
            </summary>
            <param name="buffer">The source of the data.</param>
            <param name="offset">The location of the data in the source.</param>
            <returns>The indicated 3 bytes converted to an integer.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.LoadCompressionPlugin(System.String,System.Boolean)">
            <summary>
            (Attempts to) load compression formats from the given file.
            </summary>
            <param name="file">The dll file to load.</param>
            <param name="printFailures">If formats without an empty contrsuctor should get a print.</param>
            <returns>A list with an instance of all compression formats found in the given dll file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">If the given file does not exist.</exception>
            <exception cref="T:System.IO.FileLoadException">If the file could not be loaded.</exception>
            <exception cref="T:System.BadImageFormatException">If the file is not a valid assembly, or the loaded
            assembly is compiled with a higher version of .NET.</exception>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.LoadCompressionPlugins(System.String)">
            <summary>
            Loads all compression formats found in the given folder.
            </summary>
            <param name="folder">The folder to load plugins from.</param>
            <returns>A list with an instance of all compression formats found in the given folder.</returns>
        </member>
        <member name="M:WindowsFormsApplication1.IOUtils.GetParent(System.String)">
            <summary>
            Gets the full path to the parent directory of the given path.
            </summary>
            <param name="path">The path to get the parent directory path of.</param>
            <returns>The full path to the parent directory of teh given path.</returns>
        </member>
        <member name="F:WindowsFormsApplication1.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WindowsFormsApplication1.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:WindowsFormsApplication1.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WindowsFormsApplication1.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:AOffset.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AOffset.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AOffset.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
